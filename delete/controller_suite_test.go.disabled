package main

import (
	"encoding/json"
	"net/http/httptest"
	"testing"

	"github.com/gin-gonic/gin"

	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"
)

func TestController(t *testing.T) {
	RegisterFailHandler(Fail)
	RunSpecs(t, "Controller Suite")
}

var _ = BeforeSuite(func() {
	gin.SetMode(gin.TestMode)
})

/////////////////////////////////////////////////////
// Test helper functions

func testGetMsg(resp *httptest.ResponseRecorder) (msg string, jerr bool, err error) {
	obj := struct {
		Message string `json:"message"`
		JErr    bool   `json:"error"`
	}{}

	if err = json.Unmarshal([]byte(resp.Body.String()), &obj); err == nil {
		msg = obj.Message
		jerr = obj.JErr
	}

	return
}

func testGetGame(resp *httptest.ResponseRecorder) (g *game.Game, err error) {
	type G struct {
		Header *gotHeader `json:"header"`
		state  *state     `json:"state"`
	}

	obj := struct {
		Game *G `json:"game"`
	}{
		Game: &G{
			Header: new(gotHeader),
			state:  new(state),
		},
	}

	if err = json.Unmarshal([]byte(resp.Body.String()), &obj); err == nil {
		g = new(game.Game)
		g.Header = obj.Game.Header
		g.state = obj.Game.state
	}

	return
}
