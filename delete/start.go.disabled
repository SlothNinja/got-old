package controller

import (
	"net/http"
	"strconv"

	"bitbucket.org/SlothNinja/log"
	"cloud.google.com/go/datastore"
	"github.com/gin-gonic/gin"
)

func (s *server) start() gin.HandlerFunc {
	return func(c *gin.Context) {
		log.Debugf("Entering")
		defer log.Debugf("Exiting")

		hid, err := strconv.ParseInt(c.Param(param), 10, 64)
		if err != nil {
			log.Errorf(err.Error())
			c.AbortWithStatus(http.StatusInternalServerError)
			return
		}

		h := header.New(hid)
		if err = s.Get(c, h.Key, h); err != nil {
			log.Errorf(err.Error())
			c.AbortWithStatus(http.StatusInternalServerError)
			return
		}

		h.UndoStack.Update()
		st := state.New(h.UndoStack.Current, h.Key)
		g := game.New(h, st)

		g.Start()

		ks := []*datastore.Key{g.Header.Key, g.State.Key}
		es := []interface{}{g.Header, g.State}

		_, err = s.RunInTransaction(c, func(tx *datastore.Transaction) error {
			_, err := s.PutMulti(c, ks, es)
			return err
		})
		if err != nil {
			log.Errorf(err.Error())
			c.AbortWithError(http.StatusInternalServerError, err)
			return
		}

		game.SendTurnNotification(c, g.Header, g.CPUserIndices[0])
		c.Status(http.StatusOK)
	}
}
